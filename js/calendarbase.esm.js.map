{"version":3,"file":"calendarbase.esm.js","sources":["./index.ts"],"sourcesContent":["export interface CalendarDate {\n  day: number;\n  month: number;\n  selected?: boolean;\n  siblingMonth?: boolean;\n  weekDay?: number;\n  weekNumber?: number;\n  year: number;\n}\n\n/**\n * Calendar object\n */\nclass Calendar {\n  startDate: CalendarDate | null;\n  endDate: CalendarDate | null;\n  siblingMonths: boolean;\n  weekNumbers: boolean;\n  weekStart: number;\n\n  /**\n   * Calendar constructor\n   *\n   * @param  options  Calendar options\n   */\n  constructor({\n    startDate = null,\n    endDate = null,\n    siblingMonths = false,\n    weekNumbers = false,\n    weekStart = 0,\n  }: {\n    /**\n     * Date object indicating the selected start date\n     */\n    startDate?: CalendarDate | null;\n\n    /**\n     * Date object indicating the selected end date\n     */\n    endDate?: CalendarDate | null;\n\n    /**\n     * Calculate dates from sibling months (before and after the current month, based on weekStart)\n     */\n    siblingMonths?: boolean;\n\n    /**\n     * Calculate the week days\n     */\n    weekNumbers?: boolean;\n\n    /**\n     * Day of the week to start the calendar, respects `Date.prototype.getDay` (defaults to `0`, Sunday)\n     */\n    weekStart?: number;\n  } = {}) {\n    this.startDate = startDate;\n    this.endDate = endDate;\n    this.siblingMonths = siblingMonths;\n    this.weekNumbers = weekNumbers;\n    this.weekStart = weekStart;\n  }\n\n  /**\n   * Calculate a calendar month\n   *\n   * @param   year   Year\n   * @param   month  Month [0-11]\n   * @return         Calendar days\n   */\n  getCalendar(year: number, month: number) {\n    const date = new Date(Date.UTC(year, month, 1, 0, 0, 0, 0));\n\n    year = date.getUTCFullYear();\n    month = date.getUTCMonth();\n\n    const calendar: (CalendarDate | false)[] = [];\n    const firstDay = date.getUTCDay();\n    const firstDate = -((7 - this.weekStart + firstDay) % 7);\n    const lastDate = Calendar.daysInMonth(year, month);\n    const lastDay = (lastDate - firstDate) % 7;\n    const lastDatePreviousMonth = Calendar.daysInMonth(year, month - 1);\n\n    let i = firstDate;\n    let currentDay;\n    let currentDate;\n    let currentDateObject: CalendarDate | false = false;\n    let currentWeekNumber = null;\n    let otherMonth;\n    let otherYear;\n\n    const max = lastDate - i + (lastDay !== 0 ? 7 - lastDay : 0) + firstDate;\n\n    while (i < max) {\n      currentDate = i + 1;\n      currentDay = ((i < 1 ? 7 + i : i) + firstDay) % 7;\n      if (currentDate < 1 || currentDate > lastDate) {\n        if (this.siblingMonths) {\n          if (currentDate < 1) {\n            otherMonth = month - 1;\n            otherYear = year;\n            if (otherMonth < 0) {\n              otherMonth = 11;\n              otherYear--;\n            }\n            currentDate = lastDatePreviousMonth + currentDate;\n          } else if (currentDate > lastDate) {\n            otherMonth = month + 1;\n            otherYear = year;\n            if (otherMonth > 11) {\n              otherMonth = 0;\n              otherYear++;\n            }\n            currentDate = i - lastDate + 1;\n          }\n\n          if (otherMonth !== undefined && otherYear !== undefined) {\n            currentDateObject = {\n              day: currentDate,\n              weekDay: currentDay,\n              month: otherMonth,\n              year: otherYear,\n              siblingMonth: true,\n            };\n          }\n        } else {\n          currentDateObject = false;\n        }\n      } else {\n        currentDateObject = {\n          day: currentDate,\n          weekDay: currentDay,\n          month: month,\n          year: year,\n        };\n      }\n\n      if (currentDateObject && this.weekNumbers) {\n        if (currentWeekNumber === null) {\n          currentWeekNumber = Calendar.calculateWeekNumber(currentDateObject);\n        } else if (currentDay === 1 && currentWeekNumber === 52) {\n          currentWeekNumber = 1;\n        } else if (currentDay === 1) {\n          currentWeekNumber++;\n        }\n        currentDateObject.weekNumber = currentWeekNumber;\n      }\n\n      if (currentDateObject && this.startDate) {\n        currentDateObject.selected = this.isDateSelected(currentDateObject);\n      }\n\n      calendar.push(currentDateObject);\n      i++;\n    }\n\n    return calendar;\n  }\n\n  /**\n   * Checks if a date is selected\n   *\n   * @param   date  Date object\n   * @return        Selected status of the date\n   */\n  isDateSelected(date: CalendarDate) {\n    if (!this.startDate) {\n      return false;\n    }\n\n    if (\n      date.year === this.startDate.year &&\n      date.month === this.startDate.month &&\n      date.day === this.startDate.day\n    ) {\n      return true;\n    }\n\n    if (!this.endDate) {\n      return false;\n    }\n\n    if (\n      date.year === this.startDate.year &&\n      date.month === this.startDate.month &&\n      date.day < this.startDate.day\n    ) {\n      return false;\n    }\n\n    if (\n      date.year === this.endDate.year &&\n      date.month === this.endDate.month &&\n      date.day > this.endDate.day\n    ) {\n      return false;\n    }\n\n    if (\n      date.year === this.startDate.year &&\n      date.month < this.startDate.month\n    ) {\n      return false;\n    }\n\n    if (date.year === this.endDate.year && date.month > this.endDate.month) {\n      return false;\n    }\n\n    if (date.year < this.startDate.year) {\n      return false;\n    }\n\n    if (date.year > this.endDate.year) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Sets the selected period start\n   *\n   * @param  date  Date object\n   */\n  setStartDate(date: CalendarDate) {\n    this.startDate = date;\n  }\n\n  /**\n   * Sets the selected period end\n   *\n   * @param  date  Date object\n   */\n  setEndDate(date: CalendarDate) {\n    this.endDate = date;\n  }\n\n  /**\n   * Sets one selected date\n   *\n   * @param  date  Date object\n   */\n  setDate(date: CalendarDate) {\n    return this.setStartDate(date);\n  }\n\n  /**\n   * Calculates the difference between two dates (date1 - date2), in days\n   *\n   * @param   dateLeft   Date object\n   * @param   dateRight  Date object\n   * @return             Days between the dates\n   */\n  static diff(dateLeft: CalendarDate, dateRight: CalendarDate) {\n    const dateLeftDate = new Date(\n      Date.UTC(dateLeft.year, dateLeft.month, dateLeft.day, 0, 0, 0, 0)\n    );\n    const dateRightDate = new Date(\n      Date.UTC(dateRight.year, dateRight.month, dateRight.day, 0, 0, 0, 0)\n    );\n    return Math.ceil(\n      (dateLeftDate.getTime() - dateRightDate.getTime()) / 86400000\n    );\n  }\n\n  /**\n   * Calculates the interval between two dates\n   *\n   * @param   dateLeft   Date object\n   * @param   dateRight  Date object\n   * @return             Number of days between dates\n   */\n  static interval(dateLeft: CalendarDate, dateRight: CalendarDate) {\n    return Math.abs(Calendar.diff(dateLeft, dateRight)) + 1;\n  }\n\n  /**\n   * Quickly compare two dates\n   *\n   * @param   dateLeft   Left `CalendarDate` object\n   * @param   dateRight  Right `CalendarDate` object\n   * @return             Comparison result: -1 (left < right), 0 (equal) or 1 (left > right)\n   */\n  static compare(dateLeft: CalendarDate, dateRight: CalendarDate) {\n    if (\n      typeof dateLeft !== 'object' ||\n      typeof dateRight !== 'object' ||\n      dateLeft === null ||\n      dateRight === null\n    ) {\n      throw new TypeError('dates must be objects');\n    }\n\n    if (dateLeft.year < dateRight.year) {\n      return -1;\n    }\n\n    if (dateLeft.year > dateRight.year) {\n      return 1;\n    }\n\n    if (dateLeft.month < dateRight.month) {\n      return -1;\n    }\n\n    if (dateLeft.month > dateRight.month) {\n      return 1;\n    }\n\n    if (dateLeft.day < dateRight.day) {\n      return -1;\n    }\n\n    if (dateLeft.day > dateRight.day) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Calculates the number of days in a month\n   *\n   * @param   year  Year\n   * @param   month Month [0-11]\n   * @return        Length of the month\n   */\n  static daysInMonth(year: number, month: number) {\n    return new Date(year, month + 1, 0).getDate();\n  }\n\n  /**\n   * Calculates if a given year is a leap year\n   *\n   * @param   year  Year\n   * @return        Leap year or not\n   */\n  static isLeapYear(year: number) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n  }\n\n  /**\n   * Calculates the week number for a given date\n   *\n   * @param   date  Date object\n   * @return        Week number\n   */\n  // Adapted from http://techblog.procurios.nl/k/news/view/33796/14863/calculate-iso-8601-week-and-year-in-javascript.html\n  static calculateWeekNumber(date: CalendarDate) {\n    // Creates the requested date\n    const current = new Date(\n      Date.UTC(date.year, date.month, date.day, 0, 0, 0, 0)\n    );\n\n    // Create a copy of the object\n    const target = new Date(current.valueOf());\n\n    // ISO week date weeks start on monday so correct the day number\n    const dayNr = (current.getUTCDay() + 6) % 7;\n\n    // ISO 8601 states that week 1 is the week with the first thursday of that\n    // year. Set the target date to the thursday in the target week.\n    target.setUTCDate(target.getUTCDate() - dayNr + 3);\n\n    // Store the millisecond value of the target date\n    const firstThursday = target.valueOf();\n\n    // Set the target to the first thursday of the year\n\n    // First set the target to january first\n    target.setUTCMonth(0, 1);\n\n    // Not a thursday? Correct the date to the next thursday\n    if (target.getUTCDay() !== 4) {\n      target.setUTCMonth(0, 1 + ((4 - target.getUTCDay() + 7) % 7));\n    }\n\n    // The week number is the number of weeks between the  first thursday of the\n    // year and the thursday in the target week.\n    // 604800000 = 7 * 24 * 3600 * 1000\n    return 1 + Math.ceil((firstThursday - target.getTime()) / 604800000);\n  }\n}\n\n/**\n * Exports the Calendar\n */\nexport { Calendar };\n"],"names":["Calendar","startDate","endDate","siblingMonths","weekNumbers","weekStart","getCalendar","year","month","date","Date","UTC","getUTCFullYear","getUTCMonth","calendar","firstDay","getUTCDay","firstDate","lastDate","daysInMonth","lastDay","lastDatePreviousMonth","i","currentDay","currentDate","currentDateObject","currentWeekNumber","otherMonth","otherYear","max","undefined","day","weekDay","siblingMonth","calculateWeekNumber","weekNumber","selected","isDateSelected","push","setStartDate","setEndDate","setDate","diff","dateLeft","dateRight","dateLeftDate","dateRightDate","Math","ceil","getTime","interval","abs","compare","TypeError","getDate","isLeapYear","current","target","valueOf","dayNr","setUTCDate","getUTCDate","firstThursday","setUTCMonth"],"mappings":"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"}
